{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/SearchForm/SearchForm.jsx","components/PageHeader/PageHeader.jsx","components/Icons/Icons.jsx","utils/bookmark.js","components/SearchResultsLayout/SearchResultsLayout.jsx","components/SearchResults/SearchResults.jsx","pages/HomePage/HomePage.jsx","pages/MyProfile/MyProfile.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","getProfile","username","SignUpPage","useState","setError","email","password","passwordConf","state","setState","history","useHistory","handleChange","e","target","name","value","a","preventDefault","userService","handleSignUpOrLogin","push","console","log","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","firstName","onChange","required","lastName","type","Button","LoginPage","Header","as","color","fluid","size","Message","to","SearchForm","jobTitle","location","handleInput","handleFormSubmit","class","handleLogout","onClick","Icons","create","bookMark","SearchResultsLayout","results","bookMarkAPI","data","href","job","redirect_url","title","category","label","display_name","description","handleAddBookMark","SearchResults","jobs","searchResults","map","HomePage","setSearchResults","loading","setLoading","setJobTitle","setLocation","useEffect","searchURl","ProfilePage","columns","Row","App","setUser","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9bcfbdb6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Bad Credentials')\n  })\n}\n\nexport default {\n  signup, \n  getUser,\n  logout,\n  login,\n  getProfile\n};","import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Segment } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\nimport \"./SignupPage.css\"\n\nexport default function SignUpPage(props){\n    \n    const [error, setError ] = useState('')\n    const [state, setState]  = useState({\n        username: '',\n        email: '',\n        password: '',\n        passwordConf: '',\n      });\n\n        const history = useHistory();\n\n        function handleChange(e){\n            setState({\n             ...state,\n            [e.target.name]: e.target.value\n            })\n       }\n\n        async function handleSubmit(e){\n            e.preventDefault();\n\n        try {\n            await userService.signup(state);\n      // setTheUser in our app\n            props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n            history.push('/') // defined above from react-router-dom\n      // after this we can go whereever\n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n\n  }\n    return (\n        <>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment stacked>  \n                    <Form.Input                    \n                      name=\"firstName\"\n                      placeholder=\"firstname\"\n                      value={state.firstName}\n                      onChange={handleChange}\n                      required\n                    />   \n                    <Form.Input                    \n                      name=\"lastName\"\n                      placeholder=\"lastName\"\n                      value={state.lastName}\n                      onChange={handleChange}\n                      required\n                    />          \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input\n                      type=\"email\"                  \n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={ state.email}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={ state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={ state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Button\n                      type=\"submit\" className=\"btn\">\n                    Signup\n                    </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n               \n            </Grid.Column>\n          </Grid>\n        </> \n        )};","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n             Log-in to your account\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","\nimport React, { useState } from 'react';\n\n\n\nexport default function SearchForm(props){\n\n    \n\n    const [state, setState] = useState({\n       jobTitle: '',\n       location: '', \n    });\n\n   \n\n        const handleInput = (e) =>{\n            setState({\n                ...state,\n                [e.target.name]:e.target.value\n            })\n\n        }\n\n        \n        function handleSubmit(e) {\n            e.preventDefault();\n            props.handleFormSubmit(state.jobTitle,state.location)\n        }\n     \n   \n    return(\n        <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <input class='search' name=\"jobTitle\" placeholder=\"...Job Title\" value={state.jobTitle}  onChange={handleInput}/>\n        <input class='search' name=\"location\" placeholder=\"...Location\" value={state.location}  onChange={handleInput}/>\n        <button class='find-btn' type=\"submit\">FIND</button>\n        </form>\n    )\n}\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\n\n\nexport default function Header({handleLogout}){\n    return(\n    <nav class='nav'> \n        <ul>\n            <Link to='/'><h3 class='hiring-lab'>The Hiring Lab</h3></Link>\n            <Link to='/myprofile' class='profile'>My Profile</Link> \n            <Link to='' onClick={handleLogout} class='logout'>Logout</Link>\n        </ul>\n    </nav>\n    )\n}\n\n\n\n\n\n          ","import React from 'react';\n\n\nexport default function Icons(){\n    return(\n        <div class=\"icon\">\n               <section>\n                   <div class='search_icon'></div>\n                   <p class='icon_text'>Search for your perfect job by using key words or job title</p>\n               </section>\n               <section>\n                    <div class='bookmark_icon'></div>\n                    <p class='icon_text'>Easily bookmark and keep track of all the jobs you're interested in</p>\n               </section>\n              \n        </div>        \n    )\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/';\n\nexport function create(bookMark) {\n    return fetch(BASE_URL, {\n      method: 'POST',\n      body: bookMark,\n      headers: {\n        'Authorization': 'Bearer ' + tokenService.getToken()\n      }\n    \n    }).then(res => res.json());\n  }\n","import React from 'react';\nimport * as bookMarkAPI from '../../utils/bookmark';\n\n\n\n\n\nexport default function SearchResultsLayout(results){\n\n\n    async function handleAddBookMark(bookMark){\n        const data = await bookMarkAPI.create(bookMark)\n        console.log(data)\n    }\n   \n   function handleClick(){\n        console.log(\n            {\n                    redirect_url: results.job.redirect_url,\n                    title: results.job.title,\n                    label: results.job.category.label,\n                    location: results.job.location.display_name,\n                    description: results.job.description\n        \n                }\n        )\n      handleAddBookMark({\n            redirect_url: results.job.redirect_url,\n            title: results.job.title,\n            label: results.job.category.label,\n            location: results.job.location.display_name,\n            description: results.job.description\n\n        })\n        \n    }\n    console.log(results)\n    return(\n        <div class=\"searchResults\" >\n           <a href={results.job.redirect_url}><h3>{results.job.title}</h3></a>\n           <h4>{results.job.category.label}</h4>\n           <h4>{results.job.location.display_name}</h4>  \n           <p>{results.job.description}</p> \n         <button onClick={handleClick} class=\"bookmark_button\">Book Mark</button>\n        </div>\n    )\n }","import React, {useState} from 'react';\nimport SearchResultsLayout from '../SearchResultsLayout/SearchResultsLayout';\n\n\nexport default function SearchResults ({jobs,searchResults}){\n  \n  \n\n  \n    return(\n        <div>\n            \n            {jobs.map((job)=>{\n                \n                return(\n                    <>\n\n                    <SearchResultsLayout  \n                    job={job}\n                \n                    />\n                    </>\n                  );\n             })}\n             \n        </div>\n    )\n    \n    \n    \n \n   \n}","import React, { useState, useEffect } from \"react\";\nimport \"./HomePage.css\";\nimport SearchForm from \"../../components/SearchForm/SearchForm\";\nimport Header from \"../../components/PageHeader/PageHeader\";\nimport Icons from \"../../components/Icons/Icons\";\nimport SearchResults from \"../../components/SearchResults/SearchResults\";\n\n\n\nexport default function HomePage({handleLogout}) {\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [jobTitle, setJobTitle] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  function handleFormSubmit(title, location) {\n    setJobTitle(title);\n    setLocation(location);\n  }\n\n  useEffect(() => {\n    console.log(jobTitle, location, \"this is the jobtitle and location\");\n\n    const searchURl = `https://api.adzuna.com/v1/api/jobs/us/search/1?app_id=3c28107a&app_key=b350f92eaecc52697e668c777ba06f6b&what_and=${jobTitle}&where=${location}&sort_by=relevance`;\n\n    const makeApiCall = () => {\n      fetch(searchURl)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(\"searchResults\", data);\n          setSearchResults(data.results);\n         setLoading(false)\n     });\n    };\n    makeApiCall();\n  }, [jobTitle, location]);\n\n  return (\n    <body class='home-body' >\n      <div class='background'>\n      <Header  handleLogout={handleLogout} />\n      <h1>...Your Perfect Job is Waiting</h1>\n      <SearchForm handleFormSubmit={handleFormSubmit} />\n      </div>\n      {loading ? null : <SearchResults jobs={searchResults} /> } \n      <Icons />\n    </body>\n  );\n}\n","import React, {  useEffect } from \"react\";\nimport userService from '../../utils/userService';\nimport { useParams } from \"react-router-dom\";\nimport {Grid,  Segment } from 'semantic-ui-react';\nimport Header from \"../../components/PageHeader/PageHeader\";\nimport './MyProfile.css';\n\nexport default function ProfilePage({ user, handleLogout}){\n\n  return (\n      <body class='myprofile'>\n    <Header />\n    <Grid textAlign='center' columns={2} class=\"profile\">\n        <Grid.Row>\n           <Grid.Column style={{ maxWidth: 350 }}>\n               <Segment>\n                 <h3>{user.firstName} {user.lastName}</h3>\n               </Segment>\n            </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n            <Grid.Column style={{ maxWidth: 350 }}>\n                <Segment>\n                    <h5>\n                        {user.email}\n                    </h5>\n                </Segment>\n            </Grid.Column>\n        </Grid.Row>\n    </Grid>\n    <div>\n        <h2>Book Marked Jobs:</h2>\n    </div>\n    \n    </body>\n  )\n}","import React, {useState, useEffect} from 'react';\nimport { Redirect ,Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport HomePage from '../HomePage/HomePage';\nimport MyProfile from '../MyProfile/MyProfile';\nimport userService from '../../utils/userService';\n\n\nfunction App() {\n\n  \n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()); // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n   \n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? \n            <> \n             <Switch>\n                <Route exact path=\"/\">\n                    <HomePage user={user}  handleLogout={handleLogout} />\n                </Route>\n                <Route exact path=\"/:username\">\n                    <MyProfile user={user} handleLogout={handleLogout}/>\n                </Route>\n                  \n             </Switch>\n            </>\n            :\n            <Redirect to='/login'/>\n          }\n  \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}